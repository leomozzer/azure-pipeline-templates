parameters:
  - name: myVar
    default: "It's alive!"

variables:
  myVariable: 'ValueFromVar'
  conditionTrigger1: true
  conditionTrigger2: false
  

stages:
  - stage: multiPool
    displayName: Run diffrent pools
    jobs:
    - job: Linux
      pool:
        vmImage: ubuntu-latest #or ubuntu-20.04
      steps:
      - bash: ls -ltr
      - bash: echo "Parameters ${{ parameters.myVar }}"
      - task: Bash@3
        displayName: Display Variable
        inputs:
          targetType: 'inline'
          script: echo 'Variables $(myVariable)'
      - task: AzureCLI@2
        
        displayName: 'Azure CLI'
        inputs:
          azureSubscription: 'SC-AzureDevOps'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            Write-host "Hello"
            az group list

    - job: Windows
      pool:
        vmImage: windows-latest #or windows-2022
      steps:
      - task: PowerShell@2
        displayName: Display parameter
        inputs:
          targetType: 'inline'
          script: 'Write-Host "parameters: ${{ parameters.myVar }}"'
      - task: AzureCLI@2
        displayName: Azure CLI
        inputs:
          azureSubscription: 'SC-AzureDevOps'
          scriptType: ps
          scriptLocation: inlineScript
          inlineScript: |
            Write-host "Hello"
            az group list
      - bash: ls -ltr

    - job: macOS
      pool:
        vmImage: macOS-latest
      steps:
      - bash: ls -ltr
      - bash: echo "Parameters ${{ parameters.myVar }}"
      - task: Bash@3
        displayName: Display Variable
        inputs:
          targetType: 'inline'
          script: echo 'Variables $(myVariable)'
      - task: AzureCLI@2
        
        displayName: 'Azure CLI'
        inputs:
          azureSubscription: 'SC-AzureDevOps'
          scriptType: 'pscore'
          scriptLocation: 'inlineScript'
          inlineScript: |
            Write-host "Hello"
            az group list

  - stage: conditions
    displayName: Conditions Checking
    condition: eq(variables['Build.SourceBranch'], 'refs/heads/main')
    jobs:
    - job: NoCondtions
      pool:
        vmImage: ubuntu-latest #or ubuntu-20.04
      steps:
      - bash: ls -ltr
    - job: Condition1
      condition: eq(variables['conditionTrigger1'], true)
      pool:
        vmImage: ubuntu-latest #or ubuntu-20.04
      steps:
      - bash: ls -ltr


## Run on strategy mode
#will perform only using "steps"
# strategy:
#   matrix:
#     linux:
#       imageName: "ubuntu-latest"
#     mac:
#       imageName: "macOS-latest"
#     windows:
#       imageName: "windows-latest"
#   maxParallel: 3

# pool:
#   vmImage: $(imageName)

# steps:
# - bash: ls -ltr
# - bash: echo "Parameters ${{ parameters.myVar }}"
# - task: Bash@3
#   displayName: Display Variable
#   inputs:
#     targetType: 'inline'
#     script: echo 'Variables $(myVariable)'
# - task: AzureCLI@2
#   displayName: 'Azure CLI'
#   inputs:
#     azureSubscription: 'SC-AzureDevOps'
#     scriptType: 'pscore'
#     scriptLocation: 'inlineScript'
#     inlineScript: |
#       Write-host "Hello"
#       az group list