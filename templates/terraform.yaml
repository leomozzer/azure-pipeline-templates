# Leave parameters empty. Will be filled by terraform-pipeline.yaml
parameters:
  stage: ""
  tfstate_storage_account_resource_group_name: ""
  tfstate_storage_account_name: ""
  tf_version: ""
  service_connection_name: ""
  project_name: ""
  working_path: ""
  var_file: ""
  tfstate_file_name: ""

jobs:
- job: TerraformPlan
  displayName: "Plan for $(System.StageName)"
  steps:
  - template: ./steps/terraform-plan.yaml
    parameters:
      stage: $(System.StageName)
      tfstate_storage_account_resource_group_name: ${{ parameters.tfstate_storage_account_resource_group_name }}
      service_connection_name: ${{ parameters.service_connection_name }}
      tfstate_storage_account_name: ${{ parameters.tfstate_storage_account_name }}
      tf_version: ${{ parameters.tf_version }}
      project_name: ${{ parameters.project_name }}
      working_path: '${{ parameters.tf_script_path }}'
      var_file: '${{ parameters.tf_script_path }}/$(System.StageName).tfvars'
      tfstate_file_name: '$(System.StageName).tfstate'

- job: TerraformApply
  displayName: "Apply for $(System.StageName)"
  dependsOn: TerraformPlan
  steps:
  - template: ./steps/terraform-apply.yaml
    parameters:
      stage: $(System.StageName)
      tfstate_storage_account_resource_group_name: ${{ parameters.tfstate_storage_account_resource_group_name }}
      service_connection_name: ${{ parameters.service_connection_name }}
      tfstate_storage_account_name: ${{ parameters.tfstate_storage_account_name }}
      tf_version: ${{ parameters.tf_version }}
      project_name: ${{ parameters.project_name }}
      working_path: '${{ parameters.tf_script_path }}'
      tfstate_file_name: '$(System.StageName).tfstate'
      var_file: '${{ parameters.tf_script_path }}/$(System.StageName).tfvars'