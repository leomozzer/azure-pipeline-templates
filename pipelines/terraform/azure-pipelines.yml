trigger:
  batch: true
  branches:
    include:
    - main
  paths:
    exclude: 
    - README.md
    - LICENSE
    include:
    - pipelines/terraform/azure-pipelines.yml

parameters:
  - name: app_name
    default: "demo-app"
  - name: workDir

variables:
  - group: "demo-group"

pool:
  vmImage: ubuntu-latest

stages:
  - stage: dev
    jobs:
    - job: Terraform
      steps:
      - template: ../templates/storage-account/download.yml
        parameters:        
          file_name: 'tf-app-$(System.StageName).tar'
          storage_account_name: '$(STORAGE-ACCOUNT-NAME)'
          container_name: '$(STORAGE-ACCOUNT-CONTAINER)'
          working_dir: '$(System.DefaultWorkingDirectory)/${{ parameters.workDir }}'

      - task: ExtractFiles@1
        continueOnError: true
        inputs:
          archiveFilePatterns: '$(System.DefaultWorkingDirectory)/${{ parameters.workDir }}/tf-app-$(System.StageName).tar'
          destinationFolder: '$(System.DefaultWorkingDirectory)/${{ parameters.workDir }}'
          cleanDestinationFolder: false

      - template: ../templates/steps/terraform.yml
        parameters:
          out_file: "${{ parameters.app_name }}-$(System.StageName)"
          input_vars:  '-var "app_name=${{ parameters.app_name }}" -var "environment=$(System.StageName)" -var "subscription_id=$(SUBSCRIPTION-ID)" -var "client_id=$(CLIENT-ID)" -var "client_secret=$(CLIENT-SECRET)" -var "tenant_id=$(TENANT-ID)" '
          work_dir: '$(System.DefaultWorkingDirectory)/${{ parameters.workDir }}'
          terraformVersion: 0.14.7
      
      - task: ArchiveFiles@2
        inputs:
          rootFolderOrFile: ${{ parameters.workDir }}/terraform.tfstate
          archiveType: 'tar'
          archiveFile: ${{ parameters.workDir }}/tf-app-$(System.StageName).tar
          replaceExistingArchive: true
          includeRootFolder: false

      - template: ../templates/storage-account/upload.yml
        parameters:
          file_name: 'tf-app-$(System.StageName).tar'
          storage_account_name: '$(STORAGE-ACCOUNT-NAME)'
          container_name: '$(STORAGE-ACCOUNT-CONTAINER)'
          working_dir: ${{ parameters.workDir }}
      
      - task: CopyFiles@2
        inputs:
          SourceFolder: '$(System.DefaultWorkingDirectory)/${{ parameters.workDir }}'
          Contents: |
            output.json
          TargetFolder: '$(Build.ArtifactStagingDirectory)'

      - task: PublishBuildArtifacts@1
        inputs:
          pathToPublish: '$(Build.ArtifactStagingDirectory)'
          artifactName: 'tfstates-database-$(System.StageName)'